{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yy\\\\Desktop\\\\fronted\\\\src\\\\view\\\\CartView.js\";\nimport React from 'react';\nimport { Button, Layout } from 'antd';\nimport { HeaderInfo } from \"../components/HeaderInfo\";\nimport { SideBar } from \"../components/SideBar2\";\nimport '../css/home.css';\nimport { withRouter } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport { Table, Radio, Divider } from 'antd';\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\nlet columns;\nlet data;\nlet i;\ncolumns = [{\n  title: 'Name',\n  dataIndex: 'name'\n}];\ndata = [{\n  key: '1',\n  name: sessionStorage.getItem(\"1\")\n}];\n\nfor (i = 2; i <= sessionStorage.length; i++) data.push({\n  key: i.toString(),\n  name: sessionStorage.getItem(i.toString())\n});\n\nclass CartView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedRowKeys: []\n    };\n\n    this.selectRow = record => {\n      const selectedRowKeys = [...this.state.selectedRowKeys];\n\n      if (selectedRowKeys.indexOf(record.key) >= 0) {\n        selectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1);\n      } else {\n        selectedRowKeys.push(record.key);\n      }\n\n      this.setState({\n        selectedRowKeys\n      });\n    };\n\n    this.onSelectedRowKeysChange = selectedRowKeys => {\n      this.setState({\n        selectedRowKeys\n      });\n    };\n  }\n\n  componentDidMount() {\n    let user = localStorage.getItem(\"user\");\n    this.setState({\n      user: user\n    });\n  }\n\n  render() {\n    const {\n      selectedRowKeys\n    } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectedRowKeysChange\n    };\n    return React.createElement(Layout, {\n      className: \"layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(HeaderInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Table, {\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: data,\n      onRow: record => ({\n        onClick: () => {\n          this.selectRow(record);\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button-groups\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"danger\",\n      icon: \"shopping-cart\",\n      size: \"large\",\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\\u7ACB\\u523B\\u5241\\u624B\"))));\n  }\n\n}\n\nexport default withRouter(CartView);","map":{"version":3,"sources":["C:/Users/yy/Desktop/fronted/src/view/CartView.js"],"names":["React","Button","Layout","HeaderInfo","SideBar","withRouter","Table","Radio","Divider","Header","Content","Footer","columns","data","i","title","dataIndex","key","name","sessionStorage","getItem","length","push","toString","CartView","Component","constructor","props","state","selectedRowKeys","selectRow","record","indexOf","splice","setState","onSelectedRowKeysChange","componentDidMount","user","localStorage","render","rowSelection","onChange","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Button, Layout} from 'antd'\r\nimport {HeaderInfo} from \"../components/HeaderInfo\";\r\nimport {SideBar} from \"../components/SideBar2\";\r\nimport '../css/home.css'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Radio, Divider } from 'antd';\r\n\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nlet columns;\r\nlet data;\r\nlet i;\r\n\r\ncolumns = [{\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n}];\r\n\r\ndata = [{\r\n    key: '1',\r\n    name: sessionStorage.getItem(\"1\"),\r\n}];\r\nfor (i = 2;i <= sessionStorage.length;i++)\r\ndata.push({key:i.toString(),name:sessionStorage.getItem(i.toString())});\r\n\r\nclass CartView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        let user = localStorage.getItem(\"user\");\r\n        this.setState({user:user});\r\n    }\r\n    state = {\r\n        selectedRowKeys: [],\r\n    };\r\n    selectRow = (record) => {\r\n        const selectedRowKeys = [...this.state.selectedRowKeys];\r\n        if (selectedRowKeys.indexOf(record.key) >= 0) {\r\n            selectedRowKeys.splice(selectedRowKeys.indexOf(record.key), 1);\r\n        } else {\r\n            selectedRowKeys.push(record.key);\r\n        }\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n    onSelectedRowKeysChange = (selectedRowKeys) => {\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    render(){\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectedRowKeysChange,\r\n        };\r\n        return(\r\n\r\n            <Layout className=\"layout\">\r\n                <Header>\r\n                    <HeaderInfo />\r\n                </Header>\r\n                <Layout>\r\n                    <SideBar />\r\n                    <Table\r\n                        rowSelection={rowSelection}\r\n                        columns={columns}\r\n                        dataSource={data}\r\n                        onRow={(record) => ({\r\n                            onClick: () => {\r\n                                this.selectRow(record);\r\n                            },\r\n                        })}\r\n                    />\r\n                    <div className=\"col-md-1\"></div>\r\n                    <div className={\"button-groups\"}>\r\n                        <Button type=\"danger\" icon=\"shopping-cart\" size={\"large\"}  href=\"/\">\r\n                            立刻剁手\r\n                        </Button>\r\n                    </div>\r\n                </Layout>\r\n\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CartView);"]},"metadata":{},"sourceType":"module"}