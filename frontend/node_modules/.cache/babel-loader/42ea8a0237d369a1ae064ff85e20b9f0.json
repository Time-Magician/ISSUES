{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yy\\\\Desktop\\\\fronted\\\\src\\\\components\\\\SearchBar.js\";\nimport React from 'react';\nimport { Icon, Button, Input, AutoComplete } from 'antd';\nconst {\n  Option\n} = AutoComplete;\n\nfunction onSelect(value) {\n  console.log('onSelect', value);\n}\n\nfunction getRandomInt(max, min = 0) {\n  return Math.floor(Math.random() * (max - min + 1)) + min; // eslint-disable-line no-mixed-operators\n}\n\nfunction searchResult(query) {\n  return new Array(getRandomInt(5)).join('.').split('.').map((item, idx) => ({\n    query,\n    category: `${query}${idx}`,\n    count: getRandomInt(200, 100)\n  }));\n}\n\nfunction renderOption(item) {\n  return React.createElement(Option, {\n    key: item.category,\n    text: item.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"global-search-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"global-search-item-desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Found \", item.query, \" on\", React.createElement(\"a\", {\n    href: `https://s.taobao.com/search?q=${item.query}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, item.category)), React.createElement(\"span\", {\n    className: \"global-search-item-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, item.count, \" results\")));\n}\n\nexport class SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataSource: []\n    };\n\n    this.handleSearch = value => {\n      this.setState({\n        dataSource: value ? searchResult(value) : []\n      });\n    };\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"global-search-wrapper\",\n      style: {\n        width: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(AutoComplete, {\n      className: \"global-search\",\n      size: \"large\",\n      style: {\n        width: '100%'\n      },\n      dataSource: dataSource.map(renderOption),\n      onSelect: onSelect,\n      onSearch: this.handleSearch,\n      placeholder: \"input here\",\n      optionLabelProp: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Input, {\n      suffix: React.createElement(Button, {\n        className: \"search-btn\",\n        style: {\n          marginRight: -12\n        },\n        size: \"large\",\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yy/Desktop/fronted/src/components/SearchBar.js"],"names":["React","Icon","Button","Input","AutoComplete","Option","onSelect","value","console","log","getRandomInt","max","min","Math","floor","random","searchResult","query","Array","join","split","map","item","idx","category","count","renderOption","SearchBar","Component","state","dataSource","handleSearch","setState","render","width","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Icon, Button, Input, AutoComplete } from 'antd';\r\n\r\nconst { Option } = AutoComplete;\r\n\r\nfunction onSelect(value) {\r\n    console.log('onSelect', value);\r\n}\r\n\r\nfunction getRandomInt(max, min = 0) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; // eslint-disable-line no-mixed-operators\r\n}\r\n\r\nfunction searchResult(query) {\r\n    return new Array(getRandomInt(5))\r\n        .join('.')\r\n        .split('.')\r\n        .map((item, idx) => ({\r\n            query,\r\n            category: `${query}${idx}`,\r\n            count: getRandomInt(200, 100),\r\n        }));\r\n}\r\n\r\nfunction renderOption(item) {\r\n    return (\r\n        <Option key={item.category} text={item.category}>\r\n            <div className=\"global-search-item\">\r\n                <span className=\"global-search-item-desc\">\r\n                      Found {item.query} on\r\n                     <a\r\n                         href={`https://s.taobao.com/search?q=${item.query}`}\r\n                         target=\"_blank\"\r\n                         rel=\"noopener noreferrer\"\r\n                     >\r\n                         {item.category}\r\n                     </a>\r\n                </span>\r\n                <span className=\"global-search-item-count\">{item.count} results</span>\r\n            </div>\r\n        </Option>\r\n    );\r\n}\r\n\r\nexport class SearchBar extends React.Component {\r\n    state = {\r\n        dataSource: [],\r\n    };\r\n\r\n    handleSearch = value => {\r\n        this.setState({\r\n            dataSource: value ? searchResult(value) : [],\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        return (\r\n            <div className=\"global-search-wrapper\" style={{ width: 300 }}>\r\n                <AutoComplete\r\n                    className=\"global-search\"\r\n                    size=\"large\"\r\n                    style={{ width: '100%' }}\r\n                    dataSource={dataSource.map(renderOption)}\r\n                    onSelect={onSelect}\r\n                    onSearch={this.handleSearch}\r\n                    placeholder=\"input here\"\r\n                    optionLabelProp=\"text\"\r\n                >\r\n                    <Input\r\n                        suffix={\r\n                            <Button\r\n                                className=\"search-btn\"\r\n                                style={{ marginRight: -12 }}\r\n                                size=\"large\"\r\n                                type=\"primary\"\r\n                            >\r\n                                <Icon type=\"search\" />\r\n                            </Button>\r\n                        }\r\n                    />\r\n                </AutoComplete>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}