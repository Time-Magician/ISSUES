{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yy\\\\Desktop\\\\fronted\\\\src\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport * as userService from \"./services/userService\";\nimport { message } from \"antd\";\nexport default class PrivateRoute extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkAuth = data => {\n      console.log(data);\n\n      if (data.status >= 0) {\n        this.setState({\n          isAuthed: true,\n          hasAuthed: true\n        });\n      } else {\n        message.error(data.msg);\n        localStorage.removeItem('user');\n        this.setState({\n          isAuthed: false,\n          hasAuthed: true\n        });\n      }\n    };\n\n    this.state = {\n      isAuthed: false,\n      hasAuthed: false\n    };\n  }\n\n  componentDidMount() {\n    userService.checkSession(this.checkAuth);\n  }\n\n  render() {\n    const {\n      component: Component,\n      path = \"/\",\n      exact = false,\n      strict = false\n    } = this.props;\n    console.log(this.state.isAuthed);\n\n    if (!this.state.hasAuthed) {\n      return null;\n    }\n\n    return React.createElement(Route, {\n      path: path,\n      exact: exact,\n      strict: strict,\n      render: props => this.state.isAuthed ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yy/Desktop/fronted/src/PrivateRoute.js"],"names":["React","Route","Redirect","userService","message","PrivateRoute","Component","constructor","props","checkAuth","data","console","log","status","setState","isAuthed","hasAuthed","error","msg","localStorage","removeItem","state","componentDidMount","checkSession","render","component","path","exact","strict","pathname","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAEA,eAAe,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,SARmB,GAQNC,IAAD,IAAU;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAI,CAACG,MAAL,IAAe,CAAnB,EAAsB;AAClB,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,SAAS,EAAE;AAA5B,SAAd;AACH,OAFD,MAEO;AACHZ,QAAAA,OAAO,CAACa,KAAR,CAAcP,IAAI,CAACQ,GAAnB;AACAC,QAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACA,aAAKN,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE,KAAX;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAd;AACH;AACJ,KAjBkB;;AAEf,SAAKK,KAAL,GAAa;AACTN,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AAcDM,EAAAA,iBAAiB,GAAG;AAChBnB,IAAAA,WAAW,CAACoB,YAAZ,CAAyB,KAAKd,SAA9B;AACH;;AAGDe,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA,SAAS,EAAEnB,SAAZ;AAAuBoB,MAAAA,IAAI,GAAC,GAA5B;AAAgCC,MAAAA,KAAK,GAAC,KAAtC;AAA4CC,MAAAA,MAAM,GAAC;AAAnD,QAA4D,KAAKpB,KAAvE;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAL,CAAWN,QAAvB;;AAEA,QAAI,CAAC,KAAKM,KAAL,CAAWL,SAAhB,EAA2B;AACvB,aAAO,IAAP;AACH;;AAED,WAAO,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEU,IAAb;AAAmB,MAAA,KAAK,EAAEC,KAA1B;AAAiC,MAAA,MAAM,EAAEC,MAAzC;AAAiD,MAAA,MAAM,EAAEpB,KAAK,IACjE,KAAKa,KAAL,CAAWN,QAAX,GACI,oBAAC,SAAD,oBAAeP,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,GAGI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACVqB,UAAAA,QAAQ,EAAE,QADA;AAEVR,UAAAA,KAAK,EAAE;AAACS,YAAAA,IAAI,EAAEtB,KAAK,CAACuB;AAAb;AAFG,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAUH;;AA9CoD","sourcesContent":["import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport * as userService from \"./services/userService\"\r\nimport {message} from \"antd\";\r\n\r\nexport default class PrivateRoute extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isAuthed: false,\r\n            hasAuthed: false,\r\n        };\r\n    }\r\n\r\n    checkAuth = (data) => {\r\n        console.log(data);\r\n        if (data.status >= 0) {\r\n            this.setState({isAuthed: true, hasAuthed: true});\r\n        } else {\r\n            message.error(data.msg);\r\n            localStorage.removeItem('user');\r\n            this.setState({isAuthed: false, hasAuthed: true});\r\n        }\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        userService.checkSession(this.checkAuth);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {component: Component, path=\"/\",exact=false,strict=false} = this.props;\r\n\r\n        console.log(this.state.isAuthed);\r\n\r\n        if (!this.state.hasAuthed) {\r\n            return null;\r\n        }\r\n\r\n        return <Route path={path} exact={exact} strict={strict} render={props => (\r\n            this.state.isAuthed ? (\r\n                <Component {...props}/>\r\n            ) : (\r\n                <Redirect to={{\r\n                    pathname: '/login',\r\n                    state: {from: props.location}\r\n                }}/>\r\n            )\r\n        )}/>\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}